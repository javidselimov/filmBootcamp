{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\filmBootcamp\\\\src\\\\components\\\\Favorites\\\\Favorites.jsx\",\n  _s = $RefreshSig$();\n// import  {  useState } from 'react';\n// import './Favorites.css';\n// const  Favorites=() =>{\n//    const [state,setSTate] =  useState({\n//         title: 'Новый список',\n//         movies: [\n//             { imdbID: 'tt0068646', title: 'The Godfather', year: 1972 }\n//         ]\n//     })\n//         return (\n//             <div className=\"favorites\">\n//                 <input value=\"Новый список\" className=\"favorites__name\" />\n//                 <ul className=\"favorites__list\">\n//                     {state.movies.map((item) => {\n//                         return <li key={item.id}>{item.title} ({item.year})</li>;\n//                     })}\n//                 </ul>\n//                 <button type=\"button\" className=\"favorites__save\">Сохранить список</button>\n//             </div>\n//         );\n\n// }\n\n// export default Favorites;\nimport { useState } from 'react';\nimport './Favorites.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = ({\n  selectedMovies,\n  onSaveList\n}) => {\n  _s();\n  const [title, setTitle] = useState('Yeni siyahı');\n  const saveFavoritesHandler = async () => {\n    const response = await fetch('https://acb-api.algoritmika.org/api/movies/list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        movies: selectedMovies.map(movie => movie.imdbID)\n      })\n    });\n    const data = await response.json();\n    onSaveList(data.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorites\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      className: \"favorites__name\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"favorites__list\",\n      children: selectedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.title, \" (\", movie.year, \")\"]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"favorites__save\",\n      onClick: saveFavoritesHandler,\n      children: \"Siyah\\u0131n\\u0131 yadda saxla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Favorites, \"RuU70K4ocbb1X9SkUEmzvVSBoNI=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Favorites","selectedMovies","onSaveList","_s","title","setTitle","saveFavoritesHandler","response","fetch","method","headers","body","JSON","stringify","movies","map","movie","imdbID","data","json","id","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","year","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/filmBootcamp/src/components/Favorites/Favorites.jsx"],"sourcesContent":["// import  {  useState } from 'react';\r\n// import './Favorites.css';\r\n// const  Favorites=() =>{\r\n//    const [state,setSTate] =  useState({\r\n//         title: 'Новый список',\r\n//         movies: [\r\n//             { imdbID: 'tt0068646', title: 'The Godfather', year: 1972 }\r\n//         ]\r\n//     })\r\n//         return (\r\n//             <div className=\"favorites\">\r\n//                 <input value=\"Новый список\" className=\"favorites__name\" />\r\n//                 <ul className=\"favorites__list\">\r\n//                     {state.movies.map((item) => {\r\n//                         return <li key={item.id}>{item.title} ({item.year})</li>;\r\n//                     })}\r\n//                 </ul>\r\n//                 <button type=\"button\" className=\"favorites__save\">Сохранить список</button>\r\n//             </div>\r\n//         );\r\n    \r\n// }\r\n\r\n// export default Favorites;\r\nimport { useState } from 'react';\r\nimport './Favorites.css';\r\n\r\nconst Favorites = ({ selectedMovies, onSaveList }) => {\r\n    const [title, setTitle] = useState('Yeni siyahı');\r\n\r\n    const saveFavoritesHandler = async () => {\r\n        const response = await fetch('https://acb-api.algoritmika.org/api/movies/list', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                title: title,\r\n                movies: selectedMovies.map((movie) => movie.imdbID),\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        onSaveList(data.id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"favorites\">\r\n            <input\r\n                value={title}\r\n                className=\"favorites__name\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <ul className=\"favorites__list\">\r\n                {selectedMovies.map((movie) => (\r\n                    <li key={movie.imdbID}>{movie.title} ({movie.year})</li>\r\n                ))}\r\n            </ul>\r\n            <button\r\n                type=\"button\"\r\n                className=\"favorites__save\"\r\n                onClick={saveFavoritesHandler}\r\n            >\r\n                Siyahını yadda saxla\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Favorites;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;EAEjD,MAAMS,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;MAC5EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBT,KAAK,EAAEA,KAAK;QACZU,MAAM,EAAEb,cAAc,CAACc,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAM;MACtD,CAAC;IACL,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClCjB,UAAU,CAACgB,IAAI,CAACE,EAAE,CAAC;EACvB,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBvB,OAAA;MACIwB,KAAK,EAAEnB,KAAM;MACbiB,SAAS,EAAC,iBAAiB;MAC3BG,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF/B,OAAA;MAAIsB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC1BrB,cAAc,CAACc,GAAG,CAAEC,KAAK,iBACtBjB,OAAA;QAAAuB,QAAA,GAAwBN,KAAK,CAACZ,KAAK,EAAC,IAAE,EAACY,KAAK,CAACe,IAAI,EAAC,GAAC;MAAA,GAA1Cf,KAAK,CAACC,MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACL/B,OAAA;MACIiC,IAAI,EAAC,QAAQ;MACbX,SAAS,EAAC,iBAAiB;MAC3BY,OAAO,EAAE3B,oBAAqB;MAAAgB,QAAA,EACjC;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC3B,EAAA,CArCIH,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}